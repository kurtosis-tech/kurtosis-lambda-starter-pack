version: 2.1

orbs:
  kurtosis-docs-checker: kurtosis-tech/docs-checker@0.2.0

executors:
  ubuntu_vm:
    machine:
      image: ubuntu-1604:202007-01

# NOTE: Because CircleCI jobs run on separate machines from each other, we duplicate steps (like checkout) between jobs. This is because doing the "correct" DRY
#  refactoring of, "one job for checkout, one job for build Docker image, etc." would require a) persisting files between jobs and b) persisting Docker images between
#  jobs. Both are annoying (saving/loading workspaces require re-downloading the workspace over the network, and there doesn't seem to be a good way to do Docker
#  images), so we run everything inside a single job.
# See also: https://discuss.circleci.com/t/can-docker-images-be-preserved-between-jobs-in-a-workflow-without-a-manual-load-save/23388/12
jobs:
  check_code:
    executor: ubuntu_vm
    steps:
      - checkout
      - run: bash .circleci/validate-all-bootstraps.sh "${DOCKER_USERNAME}" "${DOCKER_PASSWORD}"

workflows:
  build:
    jobs:
      # ============ Jobs that run upon PR submission ===============
      - kurtosis-docs-checker/check-docs:
          markdown-link-check-config-json: |
            {
                "replacementPatterns": [
                    {
                        "pattern": "^../kurtosis-core",
                        "replacement": "https://docs.kurtosistech.com/kurtosis-core"
                    },
                    {
                        "pattern": "^../kurtosis-libs",
                        "replacement": "https://docs.kurtosistech.com/kurtosis-libs"
                    }
                ]
            }
      - check_code:
          context:
            - docker-user
          filters:
            branches:
              ignore:
                - develop
                - master
      - check_docs:
          filters:
            branches:
              ignore:
                - develop
                - master

      # ============== Jobs that run upon release ==================
      # None for now
